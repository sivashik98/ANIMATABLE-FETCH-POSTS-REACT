{"version":3,"sources":["assets/fontAwesome.js","components/Loader/index.js","helpers/getShortName.js","store/constatns.js","store/actions/posts.js","components/Post/index.js","components/ListPosts/index.js","components/Topic/index.js","components/WarningModal/index.js","store/actions/app.js","components/TopicsForm/index.js","store/actions/topic.js","App.js","helpers/shufflePosts.js","store/reducers/posts.js","store/reducers/app.js","store/reducers/topics.js","store/rootReducer.js","store/configureStore.js","store/sagas/postSaga.js","store/sagas/index.js","containers/Root.js","index.js"],"names":["library","add","faThumbsUp","faTrash","faGripLines","Loader","size","loading","color","getShortName","name","maxValueOfSymbols","result","i","FETCH_POST","FETCH_POST_SUCCESS","FETCH_POST_FAIL","REORDER_POSTS","TOGGLE_LIKE_POST","DELETE_POST","DISABLE_INTERACTION","ENABLE_INTERACTION","SHOW_WARNING","HIDE_WARNING","CREATE_TOPIC","removeFetchingStatus","type","Post","id","item","style","provided","isFetching","useSelector","state","posts","present","dispatch","useDispatch","title","length","ref","innerRef","draggableProps","dragHandleProps","className","icon","liked","onClick","payload","toggleLikePost","deletePost","handleDelete","href","url","target","getListRender","list","key","index","draggableId","ListPosts","handleRef","whatHasMyLifeComeTo","ReactDOM","findDOMNode","HTMLElement","ActionCreators","undo","redo","droppableId","mode","renderClone","snapshot","rubric","source","width","height","rowCount","rowHeight","rowRenderer","Topic","modifiedTitle","WarningModal","warning","handleClose","isOpen","onRequestClose","ariaHideApp","enableInteraction","showWarning","TopicsForm","topics","useState","value","setValue","handleClick","topic","uniqueId","trim","isRepeated","some","el","toLowerCase","console","log","addTopic","onChange","e","onKeyPress","App","app","interaction","existedPosts","fetchPostByTopic","map","onDragEnd","destination","shuffledPosts","startIndex","endIndex","splice","removed","shufflePosts","reorderPosts","initialState","additionalProperties","handlePosts","action","filter","handleApp","handleTopics","undoableConfig","limit","undoType","ActionTypes","UNDO","redoType","REDO","includeAction","rootReducer","combineReducers","undoable","persistConfig","storage","sessionStorage","persistedReducer","persistReducer","configureStore","saga","store","createStore","applyMiddleware","persistent","persistStore","fetchPostWorker","postSaga","getUniquePostHelper","post","every","existedPost","fetchPostHelper","fetch","then","response","json","put","call","data","children","uniquePost","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","run","Root","persistor","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a03de7f.chunk.js","sourcesContent":["import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faThumbsUp,\n  faTrash,\n  faGripLines,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faThumbsUp, faTrash, faGripLines);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Loader = ({ size, loading, color }) => {\n  const defaultColor = \"#fff\";\n  const defaultSize = 10;\n\n  return (\n    <BeatLoader\n      loading={loading}\n      size={size || defaultSize}\n      color={color || defaultColor}\n    />\n  );\n};\n\nLoader.propTypes = {\n  size: PropTypes.number,\n  loading: PropTypes.bool,\n  color: PropTypes.string,\n};\n\nexport default Loader;\n","export const getShortName = (name, maxValueOfSymbols) => {\n  let result = \"\";\n\n  for (let i = 0; i < maxValueOfSymbols; i++) {\n    result += name[i];\n  }\n\n  return `${result} .....`;\n};\n","export const FETCH_POST = \"POSTS/FETCH_POST\";\nexport const FETCH_POST_SUCCESS = \"POSTS/FETCH_POST_SUCCESS\";\nexport const FETCH_POST_FAIL = \"POSTS/FETCH_POST_FAIL\";\nexport const REORDER_POSTS = \"POSTS/REORDER_POSTS\";\nexport const TOGGLE_LIKE_POST = \"POSTS/TOGGLE_LIKE_POST\";\nexport const DELETE_POST = \"POSTS/DELETE_POST\";\n\nexport const DISABLE_INTERACTION = \"APP/DISABLE_INTERACTION\";\nexport const ENABLE_INTERACTION = \"APP/ENABLE_INTERACTION\";\nexport const SHOW_WARNING = \"APP/SHOW_WARNING\";\nexport const HIDE_WARNING = \"APP/HIDE_WARNING\";\n\nexport const CREATE_TOPIC = \"TOPIC/CREATE_TOPIC\";\n","import {\n  FETCH_POST,\n  FETCH_POST_SUCCESS,\n  FETCH_POST_FAIL,\n  REORDER_POSTS,\n  TOGGLE_LIKE_POST,\n  DELETE_POST,\n} from \"../constatns\";\n\nexport const fetchPostByTopic = (topic, existedPosts) => ({\n  type: FETCH_POST,\n  payload: { topic, existedPosts },\n});\n\nexport const pushFetchedPost = (post) => ({\n  type: FETCH_POST_SUCCESS,\n  payload: post,\n});\n\nexport const removeFetchingStatus = () => ({\n  type: FETCH_POST_FAIL,\n});\n\nexport const reorderPosts = (posts) => ({\n  type: REORDER_POSTS,\n  payload: posts,\n});\n\nexport const toggleLikePost = (id) => ({\n  type: TOGGLE_LIKE_POST,\n  payload: id,\n});\n\nexport const deletePost = (id) => ({\n  type: DELETE_POST,\n  payload: id,\n});\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./post.scss\";\nimport Loader from \"../Loader\";\nimport { getShortName } from \"../../helpers/getShortName\";\n\nimport { toggleLikePost, deletePost } from \"../../store/actions/posts\";\n\nconst likeColorSvg = \"darkred\";\nconst maxSizeLetters = 75;\n\nconst Post = ({ item = false, style, provided }) => {\n  const { isFetching } = useSelector((state) => state.posts.present);\n  const dispatch = useDispatch();\n  const title =\n    item &&\n    (item.title.length > maxSizeLetters\n      ? getShortName(item.title, maxSizeLetters)\n      : item.title);\n\n  const handleLike = (id) => () => {\n    dispatch(toggleLikePost(id));\n  };\n\n  const handleDelete = (id) => () => {\n    dispatch(deletePost(id));\n  };\n\n  if (isFetching && !item) {\n    return (\n      <div style={style}>\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className=\"postLoader\"\n        >\n          <Loader loading={isFetching} />\n        </div>\n      </div>\n    );\n  }\n\n  if (!item) {\n    return (\n      <div style={style}>\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={style}>\n      <div\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        className=\"post\"\n      >\n        <div className=\"postWrapSvg\">\n          <FontAwesomeIcon\n            icon={\"thumbs-up\"}\n            className={\"postSvg postSvgLike\"}\n            style={{ color: item.liked && likeColorSvg }}\n            onClick={handleLike(item.id)}\n          />\n\n          <FontAwesomeIcon\n            icon={\"trash\"}\n            className={\"postSvg postSvgTrash\"}\n            onClick={handleDelete(item.id)}\n          />\n        </div>\n\n        <a href={item.url} className=\"postLink\" target=\"blank\">\n          {title}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  item: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n\nexport default Post;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionCreators } from \"redux-undo\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { List, AutoSizer } from \"react-virtualized\";\n\nimport \"./listPosts.scss\";\nimport Post from \"../Post\";\n\nconst rowHeight = 65;\nconst getListRender = (list) => ({ key, index, style }) => {\n  const item = list[index];\n\n  return (\n    <Draggable key={index} draggableId={`${index}`} index={index}>\n      {(provided) => (\n        <Post key={key} item={item} style={style} provided={provided} />\n      )}\n    </Draggable>\n  );\n};\n\nconst ListPosts = ({ list }) => {\n  const dispatch = useDispatch();\n\n  const handleRef = (provided) => (ref) => {\n    if (ref) {\n      const whatHasMyLifeComeTo = ReactDOM.findDOMNode(ref);\n\n      if (whatHasMyLifeComeTo instanceof HTMLElement) {\n        provided.innerRef(whatHasMyLifeComeTo);\n      }\n    }\n  };\n\n  const handleUndo = () => {\n    dispatch(ActionCreators.undo());\n  };\n\n  const handleRedo = () => {\n    dispatch(ActionCreators.redo());\n  };\n\n  return (\n    <div className=\"listPosts\">\n      <div className=\"listPostsControl\">\n        <div className=\"button listPostsControlBtn\" onClick={handleUndo}>\n          Отменить действие\n        </div>\n\n        <div className=\"button listPostsControlBtn\" onClick={handleRedo}>\n          Вернуть\n        </div>\n      </div>\n\n      <Droppable\n        droppableId=\"droppable\"\n        mode=\"virtual\"\n        renderClone={(provided, snapshot, rubric) => {\n          const item = list[rubric.source.index];\n\n          return <Post item={item} provided={provided} />;\n        }}\n      >\n        {(provided) => {\n          return (\n            <AutoSizer>\n              {({ width, height }) => (\n                <List\n                  ref={handleRef(provided)}\n                  height={height}\n                  width={width}\n                  rowCount={list.length + 1}\n                  rowHeight={rowHeight}\n                  rowRenderer={getListRender(list)}\n                  className=\"listPostsForm\"\n                />\n              )}\n            </AutoSizer>\n          );\n        }}\n      </Droppable>\n    </div>\n  );\n};\n\nListPosts.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default ListPosts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./topic.scss\";\nimport { getShortName } from \"../../helpers/getShortName\";\n\nconst maxSizeLetters = 10;\n\nconst Topic = ({ title, onClick }) => {\n  const modifiedTitle =\n    title.length > maxSizeLetters ? getShortName(title, maxSizeLetters) : title;\n\n  const handleClick = () => {\n    onClick && onClick();\n  };\n\n  return (\n    <div className=\"topic\" onClick={handleClick}>\n      <h3>{modifiedTitle}</h3>\n    </div>\n  );\n};\n\nTopic.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Topic;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-modal\";\n\nimport \"./warningModal.scss\";\n\nconst WarningModal = ({ warning, onClick }) => {\n  const handleClose = () => {\n    onClick && onClick();\n  };\n\n  return (\n    <Modal\n      isOpen={!!warning}\n      onRequestClose={handleClose}\n      ariaHideApp={false}\n      className=\"warningModal\"\n    >\n      <div className=\"warningModalWrap\">\n        <p className=\"warningModalText\">{warning}</p>\n\n        <div className=\"button\" onClick={handleClose}>\n          Закрыть\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nWarningModal.propTypes = {\n  warning: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default WarningModal;\n","import {\n  DISABLE_INTERACTION,\n  ENABLE_INTERACTION,\n  SHOW_WARNING,\n  HIDE_WARNING,\n} from \"../constatns\";\n\nexport const disableInteraction = () => ({\n  type: DISABLE_INTERACTION,\n});\n\nexport const enableInteraction = () => ({\n  type: ENABLE_INTERACTION,\n});\n\nexport const showWarning = (warning) => ({\n  type: SHOW_WARNING,\n  payload: warning,\n});\n\nexport const hideWarning = () => ({\n  type: HIDE_WARNING,\n});\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport uniqueId from \"lodash/uniqueId\";\n\nimport \"./topicsForm.scss\";\n\nimport { addTopic } from \"../../store/actions/topic\";\nimport { showWarning } from \"../../store/actions/app\";\n\nconst TopicsForm = ({ topics }) => {\n  const [value, setValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && value.trim()) {\n      handleClick();\n    }\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleClick = () => {\n    const topic = { id: uniqueId(), title: value.trim() };\n    const isRepeated = topics.some(\n      (el) => el.title.toLowerCase() === topic.title.toLowerCase()\n    );\n\n    console.log(topic, isRepeated);\n\n    if (isRepeated) {\n      const warning = \"Такой топик уже есть!\";\n\n      dispatch(showWarning(warning));\n    }\n\n    if (value.trim() && !isRepeated) {\n      dispatch(addTopic(topic));\n\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <div className=\"topicsForm\">\n      <div className=\"button\" onClick={handleClick}>\n        Добавить новый топик\n      </div>\n\n      <div className=\"topicsFormField\">\n        <input\n          type=\"text\"\n          className=\"topicsFormInput\"\n          onChange={handleChange}\n          value={value}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TopicsForm;\n","import { CREATE_TOPIC } from \"../constatns\";\n\nexport const addTopic = (topic) => ({\n  type: CREATE_TOPIC,\n  payload: topic,\n});\n","import React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"./app.scss\";\nimport ListPosts from \"./components/ListPosts\";\nimport Topic from \"./components/Topic\";\nimport WarningModal from \"./components/WarningModal\";\nimport TopicsForm from \"./components/TopicsForm\";\nimport { shufflePosts } from \"./helpers/shufflePosts\";\n\nimport { fetchPostByTopic, reorderPosts } from \"./store/actions/posts\";\nimport { hideWarning } from \"./store/actions/app\";\n\nconst App = () => {\n  const { interaction, warning } = useSelector((state) => state.app);\n  const { posts } = useSelector((state) => state.posts.present);\n  const { topics } = useSelector((state) => state.topics);\n  const dispatch = useDispatch();\n\n  const handleClick = (topic) => () => {\n    if (interaction) {\n      dispatch(fetchPostByTopic(topic, posts));\n    }\n  };\n\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.source.index === result.destination.index) {\n      return;\n    }\n\n    const shuffledPosts = shufflePosts(\n      posts,\n      result.source.index,\n      result.destination.index\n    );\n\n    dispatch(reorderPosts(shuffledPosts));\n  };\n\n  const handleCloseModal = () => {\n    dispatch(hideWarning());\n  };\n\n  return (\n    <>\n      {topics.map((el) => (\n        <Topic key={el.id} title={el.title} onClick={handleClick(el)} />\n      ))}\n\n      <div className=\"appWrap\">\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <ListPosts list={posts} />\n        </DragDropContext>\n\n        <TopicsForm topics={topics} />\n      </div>\n\n      <WarningModal warning={warning} onClick={handleCloseModal} />\n    </>\n  );\n};\n\nexport default App;\n","export const shufflePosts = (list, startIndex, endIndex) => {\n  const result = [...list];\n  const [removed] = result.splice(startIndex, 1);\n\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n","import {\n  FETCH_POST,\n  FETCH_POST_FAIL,\n  FETCH_POST_SUCCESS,\n  REORDER_POSTS,\n  TOGGLE_LIKE_POST,\n  DELETE_POST,\n} from \"../constatns\";\n\nconst initialState = {\n  posts: [],\n  isFetching: false,\n};\nconst additionalProperties = { liked: false };\n\nconst handlePosts = (state = initialState, action) => {\n  const { posts } = state;\n\n  if (action.type === FETCH_POST) {\n    return {\n      ...state,\n      isFetching: true,\n    };\n  }\n\n  if (action.type === FETCH_POST_SUCCESS) {\n    return {\n      ...state,\n      posts: [...posts, { ...action.payload, ...additionalProperties }],\n      isFetching: false,\n    };\n  }\n\n  if (action.type === FETCH_POST_FAIL) {\n    return { ...state, isFetching: false };\n  }\n\n  if (action.type === REORDER_POSTS) {\n    return { ...state, posts: action.payload };\n  }\n\n  if (action.type === TOGGLE_LIKE_POST) {\n    return {\n      ...state,\n      posts: posts.map((el) =>\n        el.id === action.payload ? { ...el, liked: !el.liked } : el\n      ),\n    };\n  }\n\n  if (action.type === DELETE_POST) {\n    return {\n      ...state,\n      posts: posts.filter((el) => el.id !== action.payload),\n    };\n  }\n\n  return state;\n};\n\nexport default handlePosts;\n","import {\n  DISABLE_INTERACTION,\n  ENABLE_INTERACTION,\n  SHOW_WARNING,\n  HIDE_WARNING,\n} from \"../constatns\";\n\nconst initialState = {\n  interaction: true,\n  warning: null,\n};\n\nconst handleApp = (state = initialState, action) => {\n  if (action.type === DISABLE_INTERACTION) {\n    return { ...state, interaction: false };\n  }\n\n  if (action.type === ENABLE_INTERACTION) {\n    return { ...state, interaction: true };\n  }\n\n  if (action.type === SHOW_WARNING) {\n    return { ...state, warning: action.payload };\n  }\n\n  if (action.type === HIDE_WARNING) {\n    return { ...state, warning: null };\n  }\n\n  return state;\n};\n\nexport default handleApp;\n","import { CREATE_TOPIC } from \"../constatns\";\n\nconst initialState = {\n  topics: [],\n};\n\nconst handleTopics = (state = initialState, action) => {\n  const { topics } = state;\n\n  if (action.type === CREATE_TOPIC) {\n    return { ...state, topics: [...topics, action.payload] };\n  }\n\n  return state;\n};\n\nexport default handleTopics;\n","import { combineReducers } from \"redux\";\nimport undoable, { includeAction, ActionTypes } from \"redux-undo\";\n\nimport {\n  FETCH_POST_SUCCESS,\n  DELETE_POST,\n  TOGGLE_LIKE_POST,\n  REORDER_POSTS,\n} from \"./constatns\";\nimport posts from \"./reducers/posts\";\nimport app from \"./reducers/app\";\nimport topics from \"./reducers/topics\";\n\nconst undoableConfig = {\n  limit: 30,\n  undoType: ActionTypes.UNDO,\n  redoType: ActionTypes.REDO,\n  filter: includeAction([\n    FETCH_POST_SUCCESS,\n    REORDER_POSTS,\n    DELETE_POST,\n    TOGGLE_LIKE_POST,\n  ]),\n};\n\nconst rootReducer = combineReducers({\n  app,\n  posts: undoable(posts, undoableConfig),\n  topics,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport sessionStorage from \"redux-persist/lib/storage/session\";\n\nimport rootReducer from \"./rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: sessionStorage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst configureStore = (initialState, saga) => {\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    applyMiddleware(saga)\n  );\n  const persistent = persistStore(store);\n\n  return { store, persistent };\n};\n\nexport default configureStore;\n","import { takeEvery, put, call } from \"redux-saga/effects\";\nimport fetch from \"isomorphic-fetch\";\n\nimport { FETCH_POST } from \"../constatns\";\nimport { disableInteraction, enableInteraction } from \"./../actions/app\";\nimport { pushFetchedPost, removeFetchingStatus } from \"./../actions/posts\";\nimport { showWarning } from \"./../actions/app\";\n\nconst apiUrl = \"https://www.reddit.com/r/\";\n\nconst getUniquePostHelper = (posts, existedPosts) => {\n  return posts.filter((post) =>\n    existedPosts.every((existedPost) => existedPost.id !== post.id)\n  )[0];\n};\n\nconst fetchPostHelper = (payload) => () => {\n  return fetch(`${apiUrl}${payload.title}.json`).then((response) =>\n    response.json()\n  );\n};\n\nfunction* fetchPostWorker({ payload }) {\n  try {\n    yield put(disableInteraction());\n\n    const json = yield call(fetchPostHelper(payload.topic));\n    const posts = json.data.children.map((el) => el.data);\n    const uniquePost = getUniquePostHelper(posts, payload.existedPosts);\n\n    if (uniquePost) {\n      yield put(pushFetchedPost(uniquePost));\n    } else {\n      const warning = \"Актуальные посты закончились\";\n\n      yield put(showWarning(warning));\n      yield put(removeFetchingStatus());\n    }\n\n    yield put(enableInteraction());\n  } catch (e) {\n    const warning = \"Ошибка запроса постов\";\n\n    yield put(showWarning(warning));\n    yield put(removeFetchingStatus());\n    yield put(enableInteraction());\n  }\n}\n\nexport default function* postSaga() {\n  yield takeEvery(FETCH_POST, fetchPostWorker);\n}\n","import { all } from \"redux-saga/effects\";\nimport postSaga from \"./postSaga\";\n\nexport default function* rootSaga() {\n  yield all([postSaga()]);\n}\n","import React from \"react\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport App from \"../App\";\nimport configureStore from \"../store/configureStore\";\nimport rootSaga from \"../store/sagas\";\nimport Loader from \"../components/Loader\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst { store, persistent } = configureStore({}, sagaMiddleware);\nsagaMiddleware.run(rootSaga);\n\nconst Root = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate\n        loading={<Loader loading={true} size={20} />}\n        persistor={persistent}\n      >\n        <App />\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport \"./assets/fontAwesome\";\nimport Root from \"./containers/Root\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}